# frozen_string_literal: true

class <%= migration_class_name %> < ActiveRecord::Migration[<%= ActiveRecord::Migration.current_version %>]
  def change
    create_table :<%= table_name %> do |t|
      # Request information
      t.string :request_id, index: true
      t.string :http_method, null: false
      t.text :url, null: false
      t.string :ip_address
      t.string :user_agent
      t.string :referrer

      # Request details - Use JSONB for PostgreSQL, JSON for other databases
      if connection.adapter_name == 'PostgreSQL'
        t.jsonb :request_headers, default: {}
        t.jsonb :request_body
        t.jsonb :response_headers, default: {}
        t.jsonb :response_body
        t.jsonb :metadata, default: {}
      else
        t.json :request_headers, default: {}
        t.json :request_body
        t.json :response_headers, default: {}
        t.json :response_body
        t.json :metadata, default: {}
      end

      # Response details
      t.integer :status_code, null: false

      # Performance metrics
      t.decimal :duration_seconds, precision: 10, scale: 6
      t.decimal :duration_ms, precision: 10, scale: 2

      # Polymorphic association
      t.references :loggable, polymorphic: true, type: :bigint, index: true

      # Timestamp - only created_at needed for append-only logs
      t.datetime :created_at, null: false, default: -> { 'CURRENT_TIMESTAMP' }

      # Indexes for common queries
      t.index :created_at

      # Add a partial index for failed requests
      t.index :status_code, where: 'status_code >= 400', name: 'index_<%= table_name %>_on_failed_requests'
    end

    # Add JSONB indexes for PostgreSQL to improve JSON query performance
    if connection.adapter_name == 'PostgreSQL'
      add_index :<%= table_name %>, :response_body, using: :gin, name: 'index_<%= table_name %>_on_response_body_gin'
      add_index :<%= table_name %>, :request_body, using: :gin, name: 'index_<%= table_name %>_on_request_body_gin'
      add_index :<%= table_name %>, :metadata, using: :gin, name: 'index_<%= table_name %>_on_metadata_gin'
    end
  end

  def down
    drop_table :<%= table_name %>
  end
end
